public static final fun test() -> int: return 0 end

private static final fun you_cant_call_me_lol() -> int: print("you cant call me lol") end

public static final fun you_can_call_me() -> int: print("you can call me") return 0 end

public static final fun test_all() -> int:
    // tests many features of the language
    #alias function -> fun
    function test() -> int: return 0 end
    test()
    #del function
    i: int = 0
    try:
        i = "a"
    end catch (e):
        print(e)
    end
    forget i
    i: any = "test"
    print(i)
    print(i + "ing")
    print(0 > -1)
    print(0 < -1)
    for (i in [0...10]):
        print(i)
    end
    m = {}
    m["a"] = 1
    m["b"] = 2
    print(m["a"])
    print(m["b"])
    print(m)
    try:
        throw "test"
    end catch (e):
        print(e)
    end
    if (true):
        print("true")
    end else:
        print("false")
    end
    while (i < 10):
        i += 1
    end
    print(i)
    with (TestContext()) as tc:
        print(tc)
        print("test")
    end
    import math
    print(math.sqrt(4))
    print(math.PI)
    object O: end
    // comment
    /* comment
    multiline */
    public static final fun args_test(a: int, b: int, c: int=10) -> int:
        print(a)
        print(b)
        print(c)
        return 0
    end
    args_test(1, 2, c=3)
	public static final fun bubbleSort(arr: list) -> list:
	    n: int = len(arr)

	    for (i in [0...n - 1]):
	        n2: int = n - i
			n1: int = n2 - 2
	        for (j in [0...n1]):
	            aj: int = arr[j]
	            aj1: int = arr[j + 1]

	            if (aj > aj1):
	                arr[j] = aj1
	                arr[j + 1] = aj
	            end
	        end
	    end
	    return arr
	end

	arr: list = [64, 34, 25, 12, 22, 11, 90]
	print(bubbleSort(arr))
	import random
	random_list: list = []
	for (i in [0...10]):
	    random_list += [random.randint(0, 100)]
	end
	random_list.append(int(100))
	print(random_list)
	import config
	styledprint("ALL TESTS PASSED", config.get_color("info"))
    return 0
end